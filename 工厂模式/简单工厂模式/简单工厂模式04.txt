class A{  public $class;  // public $class = $_GET['c']; //类名  public $method; // public $method = $_GET['m']; //方法  public function __construct($class,$method){   $this->class = ucfirst(strtolower($class)); //对类名进行安全处理   $this->method = strtolower($method);  //对方法名进行安全处理   $this->work($this->class,$this->method);  }  public function work($class,$method){   // 把文件命名成 （类名.class.php的形式），就可以通过类名找到文件。   //include '文件名（文件在别的地方）';  #例如 include './index.php'; 引入文件然后实例化类。   $c = new $class; //实例化类   $c->$method(); //访问类的方法  } } class B{  public function ba(){   echo '实例化后的ba方法<br>';  }  public function bb(){   echo '实例化后的bb方法<br>';  } } class C{  public function ca(){   echo '实例化后的ca方法<br>';  }  public function cb(){   echo '实例化后的cb方法<br>';  } } //工厂模式的实现 $a = new A('b','ba');  // 通过类访问方法 $a = new A('C','ca');  // 通过类访问方法 
